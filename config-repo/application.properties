spring.application.name=accounts-service

# Database Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/accounts_db
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Flyway Migration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# Redis Cache Configuration
spring.redis.host=redis
spring.redis.port=6379
spring.redis.timeout=2000
spring.cache.type=redis
spring.cache.redis.time-to-live=86400000

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=accounts-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.finance.accounts.model.event

# Spring Cloud Config
# This property is primarily for the client (accounts-service) to find the config server.
# It's better set as an environment variable in docker-compose.yml for accounts-service.
spring.config.import=optional:configserver:http://config-server:8888,optional:vault://

# Spring Cloud Vault
spring.cloud.vault.uri=http://vault:8200
spring.cloud.vault.token=${VAULT_TOKEN}
spring.cloud.vault.kv.enabled=true

# Spring Security
jwt.secret=${JWT_SECRET}
jwt.expiration=86400000

# Server Configuration
server.port=8080

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true

## Tracing Configuration (assuming zipkin is a service name)
#spring.sleuth.sampler.probability=1.0  # Sleuth is older; consider Micrometer Tracing if using Spring Boot 3+
#spring.zipkin.base-url=http://zipkin:9411/  # Or micrometer.tracing.endpoint=...
